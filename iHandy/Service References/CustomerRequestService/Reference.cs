//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iHandy.CustomerRequestService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaInCity", Namespace="http://schemas.datacontract.org/2004/07/iHandyService")]
    [System.SerializableAttribute()]
    public partial class AreaInCity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerRequest", Namespace="http://schemas.datacontract.org/2004/07/iHandyService")]
    [System.SerializableAttribute()]
    public partial class CustomerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerAdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDateTimePrefTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CustomerDayTimePrefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerRequestForField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> City {
            get {
                return this.CityField;
            }
            set {
                if ((this.CityField.Equals(value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDateTime {
            get {
                return this.CreatedDateTimeField;
            }
            set {
                if ((this.CreatedDateTimeField.Equals(value) != true)) {
                    this.CreatedDateTimeField = value;
                    this.RaisePropertyChanged("CreatedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerAdditionalInfo {
            get {
                return this.CustomerAdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAdditionalInfoField, value) != true)) {
                    this.CustomerAdditionalInfoField = value;
                    this.RaisePropertyChanged("CustomerAdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDateTimePrefText {
            get {
                return this.CustomerDateTimePrefTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDateTimePrefTextField, value) != true)) {
                    this.CustomerDateTimePrefTextField = value;
                    this.RaisePropertyChanged("CustomerDateTimePrefText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CustomerDayTimePref {
            get {
                return this.CustomerDayTimePrefField;
            }
            set {
                if ((this.CustomerDayTimePrefField.Equals(value) != true)) {
                    this.CustomerDayTimePrefField = value;
                    this.RaisePropertyChanged("CustomerDayTimePref");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerEmail {
            get {
                return this.CustomerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerEmailField, value) != true)) {
                    this.CustomerEmailField = value;
                    this.RaisePropertyChanged("CustomerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerMobile {
            get {
                return this.CustomerMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerMobileField, value) != true)) {
                    this.CustomerMobileField = value;
                    this.RaisePropertyChanged("CustomerMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerRequestFor {
            get {
                return this.CustomerRequestForField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerRequestForField, value) != true)) {
                    this.CustomerRequestForField = value;
                    this.RaisePropertyChanged("CustomerRequestFor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerRequestService.ICustomerRequestService")]
    public interface ICustomerRequestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/AddCustomerRequest", ReplyAction="http://tempuri.org/ICustomerRequestService/AddCustomerRequestResponse")]
        void AddCustomerRequest(string cname, string cmobileno, string cemail, string caddinfo, string cdatetimepref, int ccity, string carea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/AddCustomerRequest", ReplyAction="http://tempuri.org/ICustomerRequestService/AddCustomerRequestResponse")]
        System.Threading.Tasks.Task AddCustomerRequestAsync(string cname, string cmobileno, string cemail, string caddinfo, string cdatetimepref, int ccity, string carea);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/GetAreasInCity", ReplyAction="http://tempuri.org/ICustomerRequestService/GetAreasInCityResponse")]
        iHandy.CustomerRequestService.AreaInCity[] GetAreasInCity(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/GetAreasInCity", ReplyAction="http://tempuri.org/ICustomerRequestService/GetAreasInCityResponse")]
        System.Threading.Tasks.Task<iHandy.CustomerRequestService.AreaInCity[]> GetAreasInCityAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/GetCustomerRequests", ReplyAction="http://tempuri.org/ICustomerRequestService/GetCustomerRequestsResponse")]
        iHandy.CustomerRequestService.CustomerRequest[] GetCustomerRequests(string useremail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerRequestService/GetCustomerRequests", ReplyAction="http://tempuri.org/ICustomerRequestService/GetCustomerRequestsResponse")]
        System.Threading.Tasks.Task<iHandy.CustomerRequestService.CustomerRequest[]> GetCustomerRequestsAsync(string useremail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerRequestServiceChannel : iHandy.CustomerRequestService.ICustomerRequestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerRequestServiceClient : System.ServiceModel.ClientBase<iHandy.CustomerRequestService.ICustomerRequestService>, iHandy.CustomerRequestService.ICustomerRequestService {
        
        public CustomerRequestServiceClient() {
        }
        
        public CustomerRequestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerRequestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerRequestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerRequestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCustomerRequest(string cname, string cmobileno, string cemail, string caddinfo, string cdatetimepref, int ccity, string carea) {
            base.Channel.AddCustomerRequest(cname, cmobileno, cemail, caddinfo, cdatetimepref, ccity, carea);
        }
        
        public System.Threading.Tasks.Task AddCustomerRequestAsync(string cname, string cmobileno, string cemail, string caddinfo, string cdatetimepref, int ccity, string carea) {
            return base.Channel.AddCustomerRequestAsync(cname, cmobileno, cemail, caddinfo, cdatetimepref, ccity, carea);
        }
        
        public iHandy.CustomerRequestService.AreaInCity[] GetAreasInCity(string id) {
            return base.Channel.GetAreasInCity(id);
        }
        
        public System.Threading.Tasks.Task<iHandy.CustomerRequestService.AreaInCity[]> GetAreasInCityAsync(string id) {
            return base.Channel.GetAreasInCityAsync(id);
        }
        
        public iHandy.CustomerRequestService.CustomerRequest[] GetCustomerRequests(string useremail) {
            return base.Channel.GetCustomerRequests(useremail);
        }
        
        public System.Threading.Tasks.Task<iHandy.CustomerRequestService.CustomerRequest[]> GetCustomerRequestsAsync(string useremail) {
            return base.Channel.GetCustomerRequestsAsync(useremail);
        }
    }
}
